import{_ as s,c as a,o as i,a3 as t}from"./chunks/framework.DDCARjJn.js";const g=JSON.parse('{"title":"开发前必读","description":"","frontmatter":{},"headers":[],"relativePath":"api-examples.md","filePath":"api-examples.md"}'),e={name:"api-examples.md"},n=t(`<h1 id="开发前必读" tabindex="-1">开发前必读 <a class="header-anchor" href="#开发前必读" aria-label="Permalink to &quot;开发前必读&quot;">​</a></h1><h2 id="测试环境api网关" tabindex="-1">测试环境API网关 <a class="header-anchor" href="#测试环境api网关" aria-label="Permalink to &quot;测试环境API网关&quot;">​</a></h2><p>BASE_URL: <a href="http://stag.tsingpay.cn" target="_blank" rel="noreferrer">http://stag.tsingpay.cn</a></p><h2 id="接口使用-appid-app-secret-通过-hmac-sha1-加密鉴权" tabindex="-1">接口使用 AppID + APP Secret 通过 HMAC SHA1 加密鉴权 <a class="header-anchor" href="#接口使用-appid-app-secret-通过-hmac-sha1-加密鉴权" aria-label="Permalink to &quot;接口使用 AppID + APP Secret 通过 HMAC SHA1 加密鉴权&quot;">​</a></h2><ul><li>App ID：渠道唯一性标示符，由系统分配。</li><li>App Secret: 接口秘钥，系统分配</li><li>HMAC：是基于散列的消息认证码（Hash-based MessageAuthentication Code）。</li></ul><h2 id="签名原串生成规则" tabindex="-1">签名原串生成规则： <a class="header-anchor" href="#签名原串生成规则" aria-label="Permalink to &quot;签名原串生成规则：&quot;">​</a></h2><p>将已有json数组中的参数按照 <code>key_1 = value_1 &amp; key_2 = value2</code> 的形式进行排列；<br> 参数的排放顺序按照首字母 ASCII 码进行升序排列，<br> 值不为空的参数均需参与签名 url 地址需要进行 urlencode 编码后传入接口</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>得到加密原串 s：</span></span>
<span class="line"><span>account_name=张胜男&amp;amount=1223.56&amp;app_id=2019071516330002&amp;branch_bank_name=中国银行&amp;card_number=6216261000000000018&amp;identity_card_number=441283195508011086&amp;nonce_str=MI7X1BMGJJNCOJQS&amp;out_order_no=20190918384748&amp;phone=15698238449&amp;time_stamp=1563852246</span></span></code></pre></div><p>生成16进制 sign</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// php 样例代码</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">hash_hmac</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;sha1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, $s, $secret_key, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><div class="language-go vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">go</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// golang 样例代码</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">func</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Hmac5Sign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">secretKey</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> string</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  m </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hmac.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">New</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(sha1.New, []</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(secretKey))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  m.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Write</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([]</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">byte</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(s))</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> m.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">Sum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nil</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="返回码" tabindex="-1">返回码 <a class="header-anchor" href="#返回码" aria-label="Permalink to &quot;返回码&quot;">​</a></h2><table tabindex="0"><thead><tr><th>返回码 <div style="width:50pt;"></div></th><th>说明 <div style="width:350pt;"></div></th></tr></thead><tbody><tr><td>0000</td><td>交易成功</td></tr><tr><td>42207</td><td>数据解析失败</td></tr><tr><td>42208</td><td>请求数据已过期</td></tr><tr><td>42209</td><td>签名验证失败</td></tr><tr><td>42210</td><td>AppID 不存在，或应用状态异常</td></tr></tbody></table>`,13),p=[n];function h(l,d,r,k,c,o){return i(),a("div",null,p)}const y=s(e,[["render",h]]);export{g as __pageData,y as default};
